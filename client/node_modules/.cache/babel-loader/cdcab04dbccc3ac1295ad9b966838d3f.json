{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scart\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from \"react\";\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  const [openList, setOpenList] = useState(false);\n  let enabledButtonClass = \"top5-button\";\n  useEffect(() => {\n    isCloseDisabled();\n  }, [store.currentList]);\n\n  function isCloseDisabled() {\n    if (store.currentList && store.listMarkedForDeletion == null) {\n      setOpenList(true);\n    } else {\n      setOpenList(false);\n    }\n  }\n\n  function handleUndo() {\n    store.undo();\n    store.hasUndo();\n  }\n\n  function handleRedo() {\n    store.redo();\n    store.hasRedo();\n  }\n\n  function handleClose() {\n    if (store.currentList && store.listMarkedForDeletion == null) {\n      history.push(\"/\");\n      store.closeCurrentList();\n    }\n  }\n\n  let editStatus = false;\n\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"undo-button\",\n      onClick: handleUndo,\n      className: enabledButtonClass,\n      children: \"\\u21B6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"redo-button\",\n      onClick: handleRedo,\n      className: enabledButtonClass,\n      children: \"\\u21B7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"close-button\",\n      onClick: handleClose,\n      className: openList ? enabledButtonClass : \"top5-button-disabled\",\n      children: \"\\u24E7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"0h4cWPQRIeUpvgX6Xp7qWQeYQfI=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["C:/Users/scart/Top5Lists_HW3/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","useHistory","React","useEffect","useState","EditToolbar","store","history","openList","setOpenList","enabledButtonClass","isCloseDisabled","currentList","listMarkedForDeletion","handleUndo","undo","hasUndo","handleRedo","redo","hasRedo","handleClose","push","closeCurrentList","editStatus","isListNameEditActive"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACC,kBAAD,CAA5B;AACA,QAAMO,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,KAAD,CAAxC;AAEA,MAAIM,kBAAkB,GAAG,aAAzB;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,eAAe;AAClB,GAFQ,EAEN,CAACL,KAAK,CAACM,WAAP,CAFM,CAAT;;AAIA,WAASD,eAAT,GAA0B;AACtB,QAAIL,KAAK,CAACM,WAAN,IAAsBN,KAAK,CAACO,qBAAN,IAA6B,IAAvD,EAA6D;AACzDJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAFD,MAGK;AACDA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;AACJ;;AACD,WAASK,UAAT,GAAsB;AAClBR,IAAAA,KAAK,CAACS,IAAN;AACAT,IAAAA,KAAK,CAACU,OAAN;AACH;;AACD,WAASC,UAAT,GAAsB;AAClBX,IAAAA,KAAK,CAACY,IAAN;AACAZ,IAAAA,KAAK,CAACa,OAAN;AACH;;AACD,WAASC,WAAT,GAAuB;AACnB,QAAId,KAAK,CAACM,WAAN,IAAsBN,KAAK,CAACO,qBAAN,IAA6B,IAAvD,EAA8D;AAC9DN,MAAAA,OAAO,CAACc,IAAR,CAAa,GAAb;AACAf,MAAAA,KAAK,CAACgB,gBAAN;AACC;AACJ;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAIjB,KAAK,CAACkB,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,4BACI;AACI,MAAA,QAAQ,EAAEA,UADd;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAET,UAHb;AAII,MAAA,SAAS,EAAEJ,kBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AACI,MAAA,QAAQ,EAAEa,UADd;AAEI,MAAA,EAAE,EAAC,aAFP;AAGI,MAAA,OAAO,EAAEN,UAHb;AAII,MAAA,SAAS,EAAEP,kBAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI;AACI,MAAA,QAAQ,EAAEa,UADd;AAEI,MAAA,EAAE,EAAC,cAFP;AAGI,MAAA,OAAO,EAAEH,WAHb;AAII,MAAA,SAAS,EAAEZ,QAAQ,GAAGE,kBAAH,GAAwB,sBAJ/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GA7DQL,W;UAEWJ,U;;;KAFXI,W;AA+DT,eAAeA,WAAf","sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\nimport React, { useEffect, useState } from \"react\";\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n    const [openList, setOpenList] = useState(false);\r\n    \r\n    let enabledButtonClass = \"top5-button\";\r\n    useEffect(() => {\r\n        isCloseDisabled();\r\n    }, [store.currentList]);   \r\n\r\n    function isCloseDisabled(){\r\n        if (store.currentList && (store.listMarkedForDeletion==null)){\r\n            setOpenList(true);\r\n        }\r\n        else {\r\n            setOpenList(false);\r\n        }\r\n    }\r\n    function handleUndo() {\r\n        store.undo();\r\n        store.hasUndo();\r\n    }\r\n    function handleRedo() {\r\n        store.redo();\r\n        store.hasRedo();\r\n    }\r\n    function handleClose() {\r\n        if (store.currentList && (store.listMarkedForDeletion==null)) {\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n        }\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    return (\r\n        <div id=\"edit-toolbar\">\r\n            <div\r\n                disabled={editStatus}\r\n                id='undo-button'\r\n                onClick={handleUndo}\r\n                className={enabledButtonClass}>\r\n                &#x21B6;\r\n            </div>\r\n            <div\r\n                disabled={editStatus}\r\n                id='redo-button'\r\n                onClick={handleRedo}\r\n                className={enabledButtonClass}>\r\n                &#x21B7;\r\n            </div>\r\n            <div\r\n                disabled={editStatus}\r\n                id='close-button'\r\n                onClick={handleClose}\r\n                className={openList ? enabledButtonClass : \"top5-button-disabled\"}>\r\n                &#x24E7;\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}