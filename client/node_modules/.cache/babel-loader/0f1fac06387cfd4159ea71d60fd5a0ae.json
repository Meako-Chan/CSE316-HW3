{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scart\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState, useEffect } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n  store.history = useHistory(); // const { currentList, selected } = props;\n  // const [ inputText, setText ] = useState(store.currentList.items);\n\n  function handleDragStart(event) {\n    if (!store.isItemEditActive) {\n      event.dataTransfer.setData(\"item\", event.target.id);\n    }\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleKeyPress(event) {\n    event.stopPropagation();\n\n    if (event.code === \"Enter\") {\n      let id = event.target.id.substring(\"item-\".length); //    console.log(event.target.value);\n      //    console.log(store.currentList.items[id]);\n      //    store.currentList.items[id] = event.target.value;   \n\n      if (event.target.value !== store.currentList.items[id]) {\n        store.addChangeItemTransaction(id, event.target.value);\n      }\n\n      toggleEdit();\n      store.updateCurrentList();\n    }\n  }\n\n  function handleOnBlur(event) {\n    let id = event.target.id.substring(\"item-\".length);\n    console.log(event.target.value);\n    console.log(store.currentList.items[id]);\n    store.currentList.items[id] = event.target.value;\n    toggleEdit();\n    store.addChangeItemTransaction(id, event.target.value);\n    store.updateCurrentList();\n  }\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    // event.stopPropagation();\n    console.log(\"ajsodflsaf \" + editActive.toString());\n\n    if (store.isItemEditActive) {} else {\n      toggleEdit();\n    }\n  }\n\n  function toggleEdit() {\n    console.log(editActive);\n    let newActive = !editActive; // if(!store.isItemEditActive){\n\n    if (newActive) {\n      // console.log(editActive);\n      setEditActive(newActive);\n      store.setIsItemNameEditActive();\n    } // store.setIsItemNameEditActive();\n\n\n    setEditActive(newActive);\n    console.log(\"Changed to \" + newActive); // }\n    // setEditActive(newActive);\n    // console.log(\"Changed to \"+newActive);\n  } // function handleUpdateText(event){\n  //     if(event.target.value === \"\"){\n  //         event.target.value = \" \";\n  //     }\n  //     //console.log(event.target.defaultValue);\n  //     // setText(event.target.value);\n  // }\n\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isItemNameEditActive) {\n    cardStatus = true;\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"edit-item-\" + index + 1,\n      className: store.isItemEditActive ? \"list-card-button-disabled\" : \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"item-\" + index,\n      className: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress\n      /*onChange={handleUpdateText}*/\n      ,\n      onBlur: handleOnBlur,\n      defaultValue: store.currentList.items[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(Top5Item, \"cY05/37kqlVQAxispFRg52Igqzg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/scart/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","useEffect","useHistory","GlobalStoreContext","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","history","handleDragStart","event","isItemEditActive","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleKeyPress","stopPropagation","code","substring","length","value","currentList","items","addChangeItemTransaction","toggleEdit","updateCurrentList","handleOnBlur","console","log","handleDrop","targetId","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","toString","newActive","setIsItemNameEditActive","index","itemClass","cardStatus","isItemNameEditActive","cardElement","text"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAYP,UAAU,CAACI,kBAAD,CAA5B;AACA,QAAM,CAAEI,UAAF,EAAcC,aAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACAM,EAAAA,KAAK,CAACK,OAAN,GAAgBT,UAAU,EAA1B,CAJqB,CAKrB;AACA;;AAGA,WAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAI,CAACP,KAAK,CAACQ,gBAAX,EAA4B;AACxBD,MAAAA,KAAK,CAACE,YAAN,CAAmBC,OAAnB,CAA2B,MAA3B,EAAmCH,KAAK,CAACI,MAAN,CAAaC,EAAhD;AACH;AAEJ;;AAED,WAASC,cAAT,CAAwBN,KAAxB,EAA+B;AAC3BA,IAAAA,KAAK,CAACO,cAAN;AACH;;AAED,WAASC,eAAT,CAAyBR,KAAzB,EAAgC;AAC5BA,IAAAA,KAAK,CAACO,cAAN;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASY,eAAT,CAAyBT,KAAzB,EAAgC;AAC5BA,IAAAA,KAAK,CAACO,cAAN;AACAV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AACD,WAASa,cAAT,CAAwBV,KAAxB,EAA+B;AAC3BA,IAAAA,KAAK,CAACW,eAAN;;AACA,QAAGX,KAAK,CAACY,IAAN,KAAe,OAAlB,EAA2B;AAExB,UAAIP,EAAE,GAAGL,KAAK,CAACI,MAAN,CAAaC,EAAb,CAAgBQ,SAAhB,CAA0B,QAAQC,MAAlC,CAAT,CAFwB,CAG3B;AACA;AACA;;AACG,UAAGd,KAAK,CAACI,MAAN,CAAaW,KAAb,KAAuBtB,KAAK,CAACuB,WAAN,CAAkBC,KAAlB,CAAwBZ,EAAxB,CAA1B,EAAsD;AACtDZ,QAAAA,KAAK,CAACyB,wBAAN,CAA+Bb,EAA/B,EAAkCL,KAAK,CAACI,MAAN,CAAaW,KAA/C;AACC;;AACDI,MAAAA,UAAU;AACV1B,MAAAA,KAAK,CAAC2B,iBAAN;AAEH;AACJ;;AACD,WAASC,YAAT,CAAsBrB,KAAtB,EAA6B;AACxB,QAAIK,EAAE,GAAGL,KAAK,CAACI,MAAN,CAAaC,EAAb,CAAgBQ,SAAhB,CAA0B,QAAQC,MAAlC,CAAT;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAK,CAACI,MAAN,CAAaW,KAAzB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACuB,WAAN,CAAkBC,KAAlB,CAAwBZ,EAAxB,CAAZ;AACAZ,IAAAA,KAAK,CAACuB,WAAN,CAAkBC,KAAlB,CAAwBZ,EAAxB,IAA8BL,KAAK,CAACI,MAAN,CAAaW,KAA3C;AACAI,IAAAA,UAAU;AACV1B,IAAAA,KAAK,CAACyB,wBAAN,CAA+Bb,EAA/B,EAAkCL,KAAK,CAACI,MAAN,CAAaW,KAA/C;AACAtB,IAAAA,KAAK,CAAC2B,iBAAN;AACP;;AAEG,WAASI,UAAT,CAAoBxB,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACO,cAAN;AACA,QAAIH,MAAM,GAAGJ,KAAK,CAACI,MAAnB;AACA,QAAIqB,QAAQ,GAAGrB,MAAM,CAACC,EAAtB;AACAoB,IAAAA,QAAQ,GAAGA,QAAQ,CAACZ,SAAT,CAAmBT,MAAM,CAACC,EAAP,CAAUqB,OAAV,CAAkB,GAAlB,IAAyB,CAA5C,CAAX;AACA,QAAIC,QAAQ,GAAG3B,KAAK,CAACE,YAAN,CAAmB0B,OAAnB,CAA2B,MAA3B,CAAf;AACAD,IAAAA,QAAQ,GAAGA,QAAQ,CAACd,SAAT,CAAmBc,QAAQ,CAACD,OAAT,CAAiB,GAAjB,IAAwB,CAA3C,CAAX;AACA7B,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAPuB,CASvB;;AACAJ,IAAAA,KAAK,CAACoC,sBAAN,CAA6BF,QAA7B,EAAuCF,QAAvC;AACH;;AACD,WAASK,gBAAT,CAA0B9B,KAA1B,EAAgC;AAC5B;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAc7B,UAAU,CAACqC,QAAX,EAA1B;;AACA,QAAItC,KAAK,CAACQ,gBAAV,EAA2B,CAE1B,CAFD,MAGK;AACDkB,MAAAA,UAAU;AACb;AACJ;;AACD,WAASA,UAAT,GAAsB;AAClBG,IAAAA,OAAO,CAACC,GAAR,CAAY7B,UAAZ;AACA,QAAIsC,SAAS,GAAG,CAACtC,UAAjB,CAFkB,CAGlB;;AACI,QAAIsC,SAAJ,EAAe;AACX;AACArC,MAAAA,aAAa,CAACqC,SAAD,CAAb;AACAvC,MAAAA,KAAK,CAACwC,uBAAN;AACH,KARa,CASd;;;AACAtC,IAAAA,aAAa,CAACqC,SAAD,CAAb;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAcS,SAA1B,EAXc,CAalB;AACA;AACA;AACH,GA7FoB,CA8FrB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAI;AAAEE,IAAAA;AAAF,MAAY1C,KAAhB;AACA,MAAI2C,SAAS,GAAG,WAAhB;;AACA,MAAIvC,SAAJ,EAAe;AACXuC,IAAAA,SAAS,GAAG,sBAAZ;AACH;;AACD,MAAIC,UAAU,GAAG,KAAjB;;AACA,MAAI3C,KAAK,CAAC4C,oBAAV,EAAgC;AAC5BD,IAAAA,UAAU,GAAG,IAAb;AACH;;AACD,MAAIE,WAAW,gBACX;AACI,IAAA,EAAE,EAAE,WAAWJ,KAAK,GAAG,CAAnB,CADR;AAEI,IAAA,SAAS,EAAEC,SAFf;AAGI,IAAA,WAAW,EAAEpC,eAHjB;AAII,IAAA,UAAU,EAAEO,cAJhB;AAKI,IAAA,WAAW,EAAEE,eALjB;AAMI,IAAA,WAAW,EAAEC,eANjB;AAOI,IAAA,MAAM,EAAEe,UAPZ;AAQI,IAAA,SAAS,EAAC,MARd;AAAA,4BAUI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,EAAE,EAAE,eAAeU,KAAf,GAAuB,CAF/B;AAGI,MAAA,SAAS,EAAEzC,KAAK,CAACQ,gBAAN,GAAyB,2BAAzB,GAAuD,kBAHtE;AAII,MAAA,OAAO,EAAE6B,gBAJb;AAKI,MAAA,KAAK,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,YAVJ,EAiBKtC,KAAK,CAAC+C,IAjBX;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAoBA,MAAI7C,UAAJ,EAAgB;AACZ4C,IAAAA,WAAW,gBACP;AACI,MAAA,EAAE,EAAE,UAAWJ,KADnB;AAEI,MAAA,SAAS,EAAC,WAFd;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,UAAU,EAAExB;AACZ;AALJ;AAMI,MAAA,MAAM,EAAEW,YANZ;AAOI,MAAA,YAAY,EAAE5B,KAAK,CAACuB,WAAN,CAAkBC,KAAlB,CAAwBiB,KAAxB;AAPlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;;AACD,SACII,WADJ;AAGP;;GAjJQ/C,Q;UAIWF,U;;;KAJXE,Q;AAmJT,eAAeA,QAAf","sourcesContent":["import { React, useContext, useState, useEffect } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n    store.history = useHistory();\r\n    // const { currentList, selected } = props;\r\n    // const [ inputText, setText ] = useState(store.currentList.items);\r\n    \r\n\r\n    function handleDragStart(event) {\r\n        if (!store.isItemEditActive){\r\n            event.dataTransfer.setData(\"item\", event.target.id);\r\n        }\r\n        \r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n    function handleKeyPress(event) {\r\n        event.stopPropagation();\r\n        if(event.code === \"Enter\") {\r\n\r\n           let id = event.target.id.substring(\"item-\".length);\r\n        //    console.log(event.target.value);\r\n        //    console.log(store.currentList.items[id]);\r\n        //    store.currentList.items[id] = event.target.value;   \r\n           if(event.target.value !== store.currentList.items[id]){\r\n           store.addChangeItemTransaction(id,event.target.value);\r\n           }\r\n           toggleEdit();\r\n           store.updateCurrentList();\r\n           \r\n       }\r\n   }\r\n   function handleOnBlur(event) {\r\n        let id = event.target.id.substring(\"item-\".length);\r\n        console.log(event.target.value);\r\n        console.log(store.currentList.items[id]);\r\n        store.currentList.items[id] = event.target.value;   \r\n        toggleEdit();\r\n        store.addChangeItemTransaction(id,event.target.value);\r\n        store.updateCurrentList();\r\n}\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n    function handleToggleEdit(event){\r\n        // event.stopPropagation();\r\n        console.log(\"ajsodflsaf \"+editActive.toString());\r\n        if (store.isItemEditActive){\r\n\r\n        }\r\n        else {\r\n            toggleEdit();\r\n        }\r\n    }\r\n    function toggleEdit() {\r\n        console.log(editActive);\r\n        let newActive = !editActive;\r\n        // if(!store.isItemEditActive){\r\n            if (newActive) {\r\n                // console.log(editActive);\r\n                setEditActive(newActive);\r\n                store.setIsItemNameEditActive();\r\n            }\r\n            // store.setIsItemNameEditActive();\r\n            setEditActive(newActive);\r\n            console.log(\"Changed to \"+newActive);\r\n            \r\n        // }\r\n        // setEditActive(newActive);\r\n        // console.log(\"Changed to \"+newActive);\r\n    }\r\n    // function handleUpdateText(event){\r\n    //     if(event.target.value === \"\"){\r\n    //         event.target.value = \" \";\r\n    //     }\r\n    //     //console.log(event.target.defaultValue);\r\n    //     // setText(event.target.value);\r\n    // }\r\n    let { index } = props;\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isItemNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement=\r\n        <div\r\n            id={'item-' + (index + 1)}\r\n            className={itemClass}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable=\"true\"\r\n        >\r\n            <input\r\n                type=\"button\"\r\n                id={\"edit-item-\" + index + 1}\r\n                className={store.isItemEditActive ? \"list-card-button-disabled\" : \"list-card-button\"  } \r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n            {props.text}\r\n        </div>\r\n    if (editActive) {\r\n        cardElement =\r\n            <input\r\n                id={\"item-\" + (index)}\r\n                className='top5-item'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                /*onChange={handleUpdateText}*/\r\n                onBlur={handleOnBlur}\r\n                defaultValue={store.currentList.items[index]}\r\n                />;\r\n        }\r\n        return (\r\n            cardElement\r\n        );\r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}