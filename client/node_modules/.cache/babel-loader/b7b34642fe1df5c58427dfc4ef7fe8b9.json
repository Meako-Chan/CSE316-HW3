{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scart\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\EditToolbar.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from 'react';\nimport { GlobalStoreContext } from '../store';\nimport { useHistory } from 'react-router-dom';\nimport React, { useEffect, useState } from \"react\";\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditToolbar() {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const history = useHistory();\n  const [openList, setOpenList] = useState(false);\n  const [canUndoActive, setCanUndoActive] = useState(false);\n  let enabledButtonClass = \"top5-button\";\n  useEffect(() => {\n    isCloseDisabled();\n    isUndoRedoDisabled();\n  }, [store.currentList, store.isItemEditActive]);\n\n  function isUndoRedoDisabled() {\n    if (store.isItemEditActive) {\n      console.log(\"Item is active. Undo and Redo disabled!\");\n      setCanUndoActive(true);\n    } else {\n      setCanUndoActive(false);\n    }\n  }\n\n  function isCloseDisabled() {\n    if (store.currentList !== null && store.listMarkedForDeletion == null) {\n      setOpenList(true);\n    } else {\n      setOpenList(false);\n    }\n  }\n\n  function handleUndo() {\n    if (!store.isItemEditActive) {\n      store.undo();\n      console.log(store.hasRedo());\n    }\n  }\n\n  function handleRedo() {\n    if (!store.isItemEditActive) {\n      store.redo();\n      console.log(store.hasRedo());\n    }\n  }\n\n  function handleClose() {\n    if (store.currentList && store.listMarkedForDeletion == null && !store.isItemEditActive) {\n      history.push(\"/\");\n      store.closeCurrentList();\n    }\n  }\n\n  let editStatus = false;\n\n  if (store.isListNameEditActive) {\n    editStatus = true;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"edit-toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"undo-button\",\n      onClick: handleUndo,\n      className: store.hasUndo() && !canUndoActive ? enabledButtonClass : \"top5-button-disabled\",\n      children: \"\\u21B6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"redo-button\",\n      onClick: handleRedo,\n      className: store.hasRedo() && !canUndoActive ? enabledButtonClass : \"top5-button-disabled\",\n      children: \"\\u21B7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      disabled: editStatus,\n      id: \"close-button\",\n      onClick: handleClose,\n      className: openList && !canUndoActive ? enabledButtonClass : \"top5-button-disabled\",\n      children: \"\\u24E7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditToolbar, \"EheNxsY5889b1cVHzjs55GmfgdY=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditToolbar;\nexport default EditToolbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditToolbar\");","map":{"version":3,"sources":["C:/Users/scart/Top5Lists_HW3/client/src/components/EditToolbar.js"],"names":["useContext","GlobalStoreContext","useHistory","React","useEffect","useState","EditToolbar","store","history","openList","setOpenList","canUndoActive","setCanUndoActive","enabledButtonClass","isCloseDisabled","isUndoRedoDisabled","currentList","isItemEditActive","console","log","listMarkedForDeletion","handleUndo","undo","hasRedo","handleRedo","redo","handleClose","push","closeCurrentList","editStatus","isListNameEditActive","hasUndo"],"mappings":"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","sourcesContent":["import { useContext } from 'react'\r\nimport { GlobalStoreContext } from '../store'\r\nimport { useHistory } from 'react-router-dom'\r\nimport React, { useEffect, useState } from \"react\";\r\n/*\r\n    This toolbar is a functional React component that\r\n    manages the undo/redo/close buttons.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction EditToolbar() {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const history = useHistory();\r\n    const [openList, setOpenList] = useState(false);\r\n    const [canUndoActive, setCanUndoActive] = useState(false);\r\n    \r\n    let enabledButtonClass = \"top5-button\";\r\n    useEffect(() => {\r\n        isCloseDisabled();\r\n        isUndoRedoDisabled();\r\n    }, [store.currentList, store.isItemEditActive]);   \r\n\r\n    function isUndoRedoDisabled() {\r\n        if (store.isItemEditActive){\r\n            console.log(\"Item is active. Undo and Redo disabled!\");\r\n            setCanUndoActive(true);\r\n        }\r\n        else {\r\n            setCanUndoActive(false);\r\n        }\r\n    }\r\n\r\n    function isCloseDisabled(){\r\n        if (store.currentList !== null && (store.listMarkedForDeletion==null)){\r\n            setOpenList(true);\r\n        }\r\n        else {\r\n            setOpenList(false);\r\n        }\r\n    }\r\n    function handleUndo() {\r\n        if (!store.isItemEditActive){\r\n            store.undo();\r\n            console.log(store.hasRedo());\r\n        }\r\n    }\r\n    function handleRedo() {\r\n        if (!store.isItemEditActive){\r\n            store.redo();\r\n            console.log(store.hasRedo());\r\n        }\r\n    }\r\n    function handleClose() {\r\n        if (store.currentList && (store.listMarkedForDeletion==null) && (!store.isItemEditActive)) {\r\n        history.push(\"/\");\r\n        store.closeCurrentList();\r\n        }\r\n    }\r\n    let editStatus = false;\r\n    if (store.isListNameEditActive) {\r\n        editStatus = true;\r\n    }\r\n    return (\r\n        <div id=\"edit-toolbar\">\r\n            <div\r\n                disabled={editStatus}\r\n                id='undo-button'\r\n                onClick={handleUndo}\r\n                className={(store.hasUndo() && !canUndoActive) ? enabledButtonClass : \"top5-button-disabled\" }>\r\n                &#x21B6;\r\n            </div>\r\n            <div\r\n                disabled={editStatus}\r\n                id='redo-button'\r\n                onClick={handleRedo}\r\n                className={(store.hasRedo() && !canUndoActive) ? enabledButtonClass : \"top5-button-disabled\"}>\r\n                &#x21B7;\r\n            </div>\r\n            <div\r\n                disabled={editStatus}\r\n                id='close-button'\r\n                onClick={handleClose}\r\n                className={(openList && !canUndoActive ) ? enabledButtonClass : \"top5-button-disabled\"}>\r\n                &#x24E7;\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditToolbar;"]},"metadata":{},"sourceType":"module"}