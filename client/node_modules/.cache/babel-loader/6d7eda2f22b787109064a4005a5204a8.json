{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scart\\\\Top5Lists_HW3\\\\client\\\\src\\\\components\\\\Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { GlobalStoreContext } from '../store';\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const [editActive, setEditActive] = useState(false);\n  const [draggedTo, setDraggedTo] = useState(0);\n  store.history = useHistory(); // const { currentList, selected } = props;\n  // const [ inputText, setText ] = useState(store.currentList.items);\n\n  function handleDragStart(event) {\n    event.dataTransfer.setData(\"item\", event.target.id);\n  }\n\n  function handleDragOver(event) {\n    event.preventDefault();\n  }\n\n  function handleDragEnter(event) {\n    event.preventDefault();\n    setDraggedTo(true);\n  }\n\n  function handleDragLeave(event) {\n    event.preventDefault();\n    setDraggedTo(false);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      if (inputText === \"\") {\n        inputText = \" \";\n      }\n\n      let id = event.target.id.substring(\"item-\".length);\n      console.log(event.target.value);\n      console.log(store.currentList.items[id]);\n      store.currentList.items[id] = event.target.value;\n      toggleEdit();\n      store.updateCurrentList();\n    }\n  } //    function handleOnBlur(event) {\n  //     if(event.code === \"Enter\") {\n  //         if(inputText === \"\"){\n  //             inputText = \" \";\n  //         }\n  //        let id = event.target.id.substring(\"item-\".length);\n  //        console.log(store.currentList.items[id]);\n  //        store.currentList.items[id] = inputText;    \n  //        toggleEdit();\n  //        store.updateCurrentList();\n  //         }\n  //     }\n\n\n  function handleDrop(event) {\n    event.preventDefault();\n    let target = event.target;\n    let targetId = target.id;\n    targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\n    let sourceId = event.dataTransfer.getData(\"item\");\n    sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\n    setDraggedTo(false); // UPDATE THE LIST\n\n    store.addMoveItemTransaction(sourceId, targetId);\n  }\n\n  function handleToggleEdit(event) {\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemNameEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleUpdateText(event) {\n    if (event.target.value === \"\") {\n      event.target.value = \" \";\n    } //console.log(event.target.defaultValue);\n\n\n    setText(event.target.value);\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  if (draggedTo) {\n    itemClass = \"top5-item-dragged-to\";\n  }\n\n  let cardStatus = false;\n\n  if (store.isItemNameEditActive) {\n    cardStatus = true;\n  }\n\n  let cardElement = /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnter: handleDragEnter,\n    onDragLeave: handleDragLeave,\n    onDrop: handleDrop,\n    draggable: \"true\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      id: \"edit-item-\" + index + 1,\n      className: \"list-card-button\",\n      onClick: handleToggleEdit,\n      value: \"\\u270E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), props.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n\n  if (editActive) {\n    cardElement = /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"item-\" + index,\n      className: \"top5-item\",\n      type: \"text\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText\n      /*onBlur={handleOnBlur}*/\n      ,\n      defaultValue: store.currentList.items[index]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n\n  return cardElement;\n}\n\n_s(Top5Item, \"cY05/37kqlVQAxispFRg52Igqzg=\", false, function () {\n  return [useHistory];\n});\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["C:/Users/scart/Top5Lists_HW3/client/src/components/Top5Item.js"],"names":["React","useContext","useState","useHistory","GlobalStoreContext","Top5Item","props","store","editActive","setEditActive","draggedTo","setDraggedTo","history","handleDragStart","event","dataTransfer","setData","target","id","handleDragOver","preventDefault","handleDragEnter","handleDragLeave","handleKeyPress","code","inputText","substring","length","console","log","value","currentList","items","toggleEdit","updateCurrentList","handleDrop","targetId","indexOf","sourceId","getData","addMoveItemTransaction","handleToggleEdit","stopPropagation","newActive","setIsItemNameEditActive","handleUpdateText","setText","index","itemClass","cardStatus","isItemNameEditActive","cardElement","text"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport { GlobalStoreContext } from '../store'\r\n/*\r\n    This React component represents a single item in our\r\n    Top 5 List, which can be edited or moved around.\r\n    \r\n    @author McKilla Gorilla\r\n*/\r\nfunction Top5Item(props) {\r\n    const { store } = useContext(GlobalStoreContext);\r\n    const [ editActive, setEditActive ] = useState(false);\r\n    const [draggedTo, setDraggedTo] = useState(0);\r\n    store.history = useHistory();\r\n    // const { currentList, selected } = props;\r\n    // const [ inputText, setText ] = useState(store.currentList.items);\r\n\r\n    function handleDragStart(event) {\r\n        event.dataTransfer.setData(\"item\", event.target.id);\r\n    }\r\n\r\n    function handleDragOver(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    function handleDragEnter(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(true);\r\n    }\r\n\r\n    function handleDragLeave(event) {\r\n        event.preventDefault();\r\n        setDraggedTo(false);\r\n    }\r\n    function handleKeyPress(event) {\r\n        if(event.code === \"Enter\") {\r\n            if(inputText === \"\"){\r\n                inputText = \" \";\r\n            }\r\n           let id = event.target.id.substring(\"item-\".length);\r\n           console.log(event.target.value);\r\n           console.log(store.currentList.items[id]);\r\n           store.currentList.items[id] = event.target.value;   \r\n           toggleEdit();\r\n           store.updateCurrentList();\r\n           \r\n       }\r\n   }\r\n//    function handleOnBlur(event) {\r\n//     if(event.code === \"Enter\") {\r\n//         if(inputText === \"\"){\r\n//             inputText = \" \";\r\n//         }\r\n//        let id = event.target.id.substring(\"item-\".length);\r\n//        console.log(store.currentList.items[id]);\r\n//        store.currentList.items[id] = inputText;    \r\n//        toggleEdit();\r\n//        store.updateCurrentList();\r\n//         }\r\n//     }\r\n\r\n    function handleDrop(event) {\r\n        event.preventDefault();\r\n        let target = event.target;\r\n        let targetId = target.id;\r\n        targetId = targetId.substring(target.id.indexOf(\"-\") + 1);\r\n        let sourceId = event.dataTransfer.getData(\"item\");\r\n        sourceId = sourceId.substring(sourceId.indexOf(\"-\") + 1);\r\n        setDraggedTo(false);\r\n\r\n        // UPDATE THE LIST\r\n        store.addMoveItemTransaction(sourceId, targetId);\r\n    }\r\n    function handleToggleEdit(event){\r\n        event.stopPropagation();\r\n        toggleEdit();\r\n    }\r\n    function toggleEdit() {\r\n        let newActive = !editActive;\r\n        if (newActive) {\r\n            store.setIsItemNameEditActive();\r\n        }\r\n        setEditActive(newActive);\r\n    }\r\n    function handleUpdateText(event){\r\n        if(event.target.value === \"\"){\r\n            event.target.value = \" \";\r\n        }\r\n        //console.log(event.target.defaultValue);\r\n        setText(event.target.value);\r\n    }\r\n    let { index } = props;\r\n    let itemClass = \"top5-item\";\r\n    if (draggedTo) {\r\n        itemClass = \"top5-item-dragged-to\";\r\n    }\r\n    let cardStatus = false;\r\n    if (store.isItemNameEditActive) {\r\n        cardStatus = true;\r\n    }\r\n    let cardElement=\r\n        <div\r\n            id={'item-' + (index + 1)}\r\n            className={itemClass}\r\n            onDragStart={handleDragStart}\r\n            onDragOver={handleDragOver}\r\n            onDragEnter={handleDragEnter}\r\n            onDragLeave={handleDragLeave}\r\n            onDrop={handleDrop}\r\n            draggable=\"true\"\r\n        >\r\n            <input\r\n                type=\"button\"\r\n                id={\"edit-item-\" + index + 1}\r\n                className=\"list-card-button\"\r\n                onClick={handleToggleEdit}\r\n                value={\"\\u270E\"}\r\n            />\r\n            {props.text}\r\n        </div>\r\n    if (editActive) {\r\n        cardElement =\r\n            <input\r\n                id={\"item-\" + (index)}\r\n                className='top5-item'\r\n                type='text'\r\n                onKeyPress={handleKeyPress}\r\n                onChange={handleUpdateText}\r\n                /*onBlur={handleOnBlur}*/\r\n                defaultValue={store.currentList.items[index]}\r\n                />;\r\n        }\r\n        return (\r\n            cardElement\r\n        );\r\n}\r\n\r\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}